name: Post-Publish

on:
  release:
    types:
      - published

jobs:
  post-publish:
    runs-on: ubuntu-latest
    env:
      UPDATE_VERSION: ${{ github.event.release.tag_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: ./.github/actions/setup-normal-workspace

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Generate Github Changelog
        env:
          OUTPUT_TYPE: "GITHUB"
        run: ./gradlew generateChangelog -PmodVersion=${UPDATE_VERSION} -PoutputType=${OUTPUT_TYPE} -Preleased=true

      - name: Generate Discord Changelog
        env:
          OUTPUT_TYPE: "DISCORD_PUBLIC"
        run: ./gradlew generateChangelog -PmodVersion=${UPDATE_VERSION} -PoutputType=${OUTPUT_TYPE} -Preleased=true

      - name: Format Changelogs
        run: ./.github/workflows/format-update-notes.sh

      - name: Upload Changelogs
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build/**/*.txt

  upload-to-modrinth:
    needs: post-publish
    runs-on: ubuntu-latest
    env:
      UPDATE_VERSION: ${{ github.event.release.tag_name }}
      REPO: ${{ github.repository }}

    #      todo multi version support
    steps:
      - name: Download Changelogs
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build

      - name: Download release file
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release download "{UPDATE_VERSION}" -p '*.jar' --repo "{REPO}"

      - name: Remove Modrinth Link
        run: |
          grep -v "Modrinth download" build/update-notes.txt | sed '1{/^$/d;}' > Changelog.md

      - name: Set Release Type
        run: |
          releaseType="release"
          if ! echo "${UPDATE_VERSION}" | grep -E '.*\.0'>/dev/null; then
            releaseType="beta"
          fi
          echo "preReleaseParam=${preReleaseParam}" >> $GITHUB_ENV

      # todo remove test
      - name: Use Release Type
        run: |
          echo "The release type is ${releaseType}"

#      - name: Publish to Modrinth
#        uses: Kir-Antipov/mc-publish@v3.3
#        with:
#          modrinth-id: byNkmv5G
#          # todo make sure this is setup
#          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
#          # todo multi version
#          files: "*.jar"
#          loaders: forge
#          game-versions: 1.8.9
#          version: ${{ github.event.release.tag_name }}
#          version-type: ${{ releaseType }}

  finalise-github-changelog:
    needs: post-publish
    runs-on: ubuntu-latest
    env:
      UPDATE_VERSION: ${{ github.event.release.tag_name }}
      REPO: ${{ github.repository }}

    steps:
      - name: Download Changelogs
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Update GitHub Release Body
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          changelog=$(cat build/github-changelog.txt)
          gh release edit "${UPDATE_VERSION}" --notes "${changelog}" --repo "${REPO}"

# todo commit the version bump
# todo possibly add webhook for sending release to discord